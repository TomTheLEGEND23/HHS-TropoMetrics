apiVersion: v1
kind: Namespace
metadata:
  name: tropometrics
  labels:
    name: tropometrics
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tropometrics-deployment
  namespace: tropometrics
  labels:
    app: tropometrics
spec:
  replicas: 2
  selector:
    matchLabels:
      app: tropometrics
  template:
    metadata:
      labels:
        app: tropometrics
    spec:
      containers:
      - name: tropometrics
        image: ghcr.io/tomthelegend23/hhs-tropometrics:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
        resources:
          requests:
            memory: "32Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        env:
        - name: TZ
          value: "Europe/Amsterdam"
---
apiVersion: v1
kind: Service
metadata:
  name: tropometrics-service
  namespace: tropometrics
  labels:
    app: tropometrics
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30080
    protocol: TCP
    name: http
  selector:
    app: tropometrics
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tropometrics-ingress
  namespace: tropometrics
  annotations:
    # For k3s Traefik ingress
    traefik.ingress.kubernetes.io/router.entrypoints: web
    # For nginx ingress controller (if used instead of Traefik)
    nginx.ingress.kubernetes.io/rewrite-target: /
    # SSL redirect (uncomment if you have SSL)
    # traefik.ingress.kubernetes.io/redirect-to-https: "true"
spec:
  rules:
  - host: tropometrics.local  # Change this to your actual domain or IP
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: tropometrics-service
            port:
              number: 80
  # Uncomment below for SSL/TLS (requires cert-manager or manual cert)
  # tls:
  # - hosts:
  #   - tropometrics.yourdomain.com
  #   secretName: tropometrics-tls
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tropometrics-config
  namespace: tropometrics
data:
  nginx.conf: |
    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        
        # Cache static assets
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # Main application
        location / {
            try_files $uri $uri/ /index.html;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }